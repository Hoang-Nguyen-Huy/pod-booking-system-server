# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: POD Booking System Server CI with Maven

on:
  push:
    branches: [ "main", "develop" ]
  pull_request:
    branches: [ "main", "develop" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'temurin'
        cache: maven

    - name: Set environment variables
      env:
        DATABASE_URL: ${{ secrets.DATABASE_URL }}
        DATABASE_USERNAME: ${{ secrets.DATABASE_USERNAME }}
        DATABASE_PASSWORD: ${{ secrets.DATABASE_PASSWORD }}
        JWT_SECRET_ACCESS_TOKEN: ${{secrets.JWT_SECRET_ACCESS_TOKEN}}
        JWT_SECRET_REFRESH_TOKEN: ${{secrets.JWT_SECRET_REFRESH_TOKEN}}
      run: |
        echo "DATABASE_URL: ${DATABASE_URL}"
        echo "DATABASE_USERNAME: ${DATABASE_USERNAME}"
        echo "DATABASE_PASSWORD: ${DATABASE_PASSWORD}"
        echo "JWT_SECRET_ACCESS_TOKEN": ${{JWT_SECRET_ACCESS_TOKEN}}
        echo "JWT_SECRET_REFRESH_TOKEN": ${{JWT_SECRET_REFRESH_TOKEN}}
        
    - name: Build with Maven
      run: mvn -B package --file pom.xml
    - name: Display surefire test report
      run: cat target/surefire-reports/*.txt
    - name: Build with Maven (debug)
      run: ./mvnw clean install -X

     # Generate application.yml from environment variables
    - name: Generate application.yml
      run: |
          mkdir -p src/main/resources
          echo "server:" >> src/main/resources/application.yml
          echo "  port: 8080" >> src/main/resources/application.yml
          echo "  servlet:" >> src/main/resources/application.yml
          echo "    context-path: /pod" >> src/main/resources/application.yml
          echo "" >> src/main/resources/application.yml
          echo "spring:" >> src/main/resources/application.yml
          echo "  datasource:" >> src/main/resources/application.yml
          echo "    url: \"${{ secrets.DATABASE_URL }}\"" >> src/main/resources/application.yml
          echo "    username: \"${{ secrets.DATABASE_USERNAME }}\"" >> src/main/resources/application.yml
          echo "    password: \"${{ secrets.DATABASE_PASSWORD }}\"" >> src/main/resources/application.yml
          echo "  jpa:" >> src/main/resources/application.yml
          echo "    hibernate:" >> src/main/resources/application.yml
          echo "      ddl-auto: update" >> src/main/resources/application.yml
          echo "      naming:" >> src/main/resources/application.yml
          echo "        implicit-strategy: org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyJpaImpl" >> src/main/resources/application.yml
          echo "        physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl" >> src/main/resources/application.yml
          echo "    show-sql: true" >> src/main/resources/application.yml
          echo "" >> src/main/resources/application.yml
          echo "jwt:" >> src/main/resources/application.yml
          echo "  JWT_SECRET_ACCESS_TOKEN: \"${{ secrets.JWT_SECRET_ACCESS_TOKEN }}\"" >> src/main/resources/application.yml
          echo "  JWT_SECRET_REFRESH_TOKEN: \"${{ secrets.JWT_SECRET_REFRESH_TOKEN }}\"" >> src/main/resources/application.yml
          
    # Optional: Uploads the full dependency graph to GitHub to improve the quality of Dependabot alerts this repository can receive
    - name: Update dependency graph
      uses: advanced-security/maven-dependency-submission-action@571e99aab1055c2e71a1e2309b9691de18d6b7d6
